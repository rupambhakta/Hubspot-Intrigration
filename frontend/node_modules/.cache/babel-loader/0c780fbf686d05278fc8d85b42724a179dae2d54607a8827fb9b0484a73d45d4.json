{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\n// slack.js\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = 'http://localhost:8000';\nexport const authorizeHubspot = async (userId, orgId) => {\n  try {\n    const formData = new FormData();\n    formData.append('user_id', userId);\n    formData.append('org_id', orgId);\n    const response = await axios.post(`${BACKEND_URL}/integrations/hubspot/authorize`, formData);\n    if (response.data.auth_url) {\n      window.location.href = response.data.auth_url;\n    }\n  } catch (error) {\n    console.error('Error authorizing HubSpot:', error);\n    throw error;\n  }\n};\nexport const getHubspotCredentials = async (userId, orgId) => {\n  try {\n    const formData = new FormData();\n    formData.append('user_id', userId);\n    formData.append('org_id', orgId);\n    const response = await axios.post(`${BACKEND_URL}/integrations/hubspot/credentials`, formData);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting HubSpot credentials:', error);\n    throw error;\n  }\n};\nexport const loadHubspotData = async credentials => {\n  try {\n    const formData = new FormData();\n    formData.append('credentials', credentials);\n    const response = await axios.post(`${BACKEND_URL}/integrations/hubspot/get_hubspot_items`, formData);\n    return response.data;\n  } catch (error) {\n    console.error('Error loading HubSpot data:', error);\n    throw error;\n  }\n};\nexport const HubspotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const checkCredentials = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await getHubspotCredentials(user, org);\n        if (response.credentials) {\n          setIntegrationParams({\n            type: 'hubspot',\n            credentials: response.credentials\n          });\n        }\n      } catch (err) {\n        console.error('Error checking HubSpot credentials:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && org) {\n      checkCredentials();\n    }\n  }, [user, org]);\n  const handleConnect = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      await authorizeHubspot(user, org);\n    } catch (err) {\n      setError('Failed to connect to HubSpot');\n      console.error('Error connecting to HubSpot:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleConnect,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  if (integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: \"Connected to HubSpot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => setIntegrationParams({}),\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleConnect,\n    children: \"Connect to HubSpot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(HubspotIntegration, \"qZrPpo95SUtrpJEa6gIa0oOoDUI=\");\n_c = HubspotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubspotIntegration\");","map":{"version":3,"names":["axios","React","useEffect","useState","Button","CircularProgress","jsxDEV","_jsxDEV","BACKEND_URL","authorizeHubspot","userId","orgId","formData","FormData","append","response","post","data","auth_url","window","location","href","error","console","getHubspotCredentials","loadHubspotData","credentials","HubspotIntegration","user","org","integrationParams","setIntegrationParams","_s","loading","setLoading","setError","checkCredentials","type","err","handleConnect","fileName","_jsxFileName","lineNumber","columnNumber","children","style","color","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Programming/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// slack.js\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress } from '@mui/material';\n\nconst BACKEND_URL = 'http://localhost:8000';\n\nexport const authorizeHubspot = async (userId, orgId) => {\n  try {\n    const formData = new FormData();\n    formData.append('user_id', userId);\n    formData.append('org_id', orgId);\n\n    const response = await axios.post(\n      `${BACKEND_URL}/integrations/hubspot/authorize`,\n      formData\n    );\n\n    if (response.data.auth_url) {\n      window.location.href = response.data.auth_url;\n    }\n  } catch (error) {\n    console.error('Error authorizing HubSpot:', error);\n    throw error;\n  }\n};\n\nexport const getHubspotCredentials = async (userId, orgId) => {\n  try {\n    const formData = new FormData();\n    formData.append('user_id', userId);\n    formData.append('org_id', orgId);\n\n    const response = await axios.post(\n      `${BACKEND_URL}/integrations/hubspot/credentials`,\n      formData\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error('Error getting HubSpot credentials:', error);\n    throw error;\n  }\n};\n\nexport const loadHubspotData = async (credentials) => {\n  try {\n    const formData = new FormData();\n    formData.append('credentials', credentials);\n\n    const response = await axios.post(\n      `${BACKEND_URL}/integrations/hubspot/get_hubspot_items`,\n      formData\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error('Error loading HubSpot data:', error);\n    throw error;\n  }\n};\n\nexport const HubspotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const checkCredentials = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await getHubspotCredentials(user, org);\n        if (response.credentials) {\n          setIntegrationParams({\n            type: 'hubspot',\n            credentials: response.credentials\n          });\n        }\n      } catch (err) {\n        console.error('Error checking HubSpot credentials:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (user && org) {\n      checkCredentials();\n    }\n  }, [user, org]);\n\n  const handleConnect = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      await authorizeHubspot(user, org);\n    } catch (err) {\n      setError('Failed to connect to HubSpot');\n      console.error('Error connecting to HubSpot:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  if (error) {\n    return (\n      <div>\n        <p style={{ color: 'red' }}>{error}</p>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleConnect}>\n          Try Again\n        </Button>\n      </div>\n    );\n  }\n\n  if (integrationParams?.credentials) {\n    return (\n      <div>\n        <p style={{ color: 'green' }}>Connected to HubSpot</p>\n        <Button \n          variant=\"contained\" \n          color=\"secondary\" \n          onClick={() => setIntegrationParams({})}\n        >\n          Disconnect\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleConnect}>\n      Connect to HubSpot\n    </Button>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}